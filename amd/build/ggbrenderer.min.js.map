{"version":3,"file":"ggbrenderer.min.js","sources":["../src/ggbrenderer.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Main module for local_ggbrenderer.\n *\n * This module injects a GeoGebra applet into the DOM.\n *\n * @module     local_ggbrenderer/ggbrenderer\n * @copyright  2022 ISB Bayern\n * @author     Philipp Memmel\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as ggbRendererUtils from 'local_ggbrenderer/ggbrendererutils';\nimport Pending from 'core/pending';\n\n/**\n * Init function for local_ggbrenderer/ggbrenderer module.\n *\n * @param {function} DeployObject the object from deployggb.js used to load the applet from\n * @param {string} appletId a string which should be used to identify the rendered GGB applet to access its JS API afterwards\n */\nexport const init = (DeployObject, appletId) => {\n    const pendingPromise = new Pending('local_ggbrenderer/init');\n    const containerId = 'local_ggbrenderer_container_' + appletId;\n    const params = JSON.parse(document.getElementById(containerId).dataset.ggbparams);\n\n    const ggbApplet = new DeployObject(params, true);\n    ggbRendererUtils.storeApplet(appletId, ggbApplet);\n    window.addEventListener('load', () => ggbApplet.inject(containerId));\n\n    pendingPromise.resolve();\n};\n"],"names":["DeployObject","appletId","pendingPromise","Pending","containerId","ggbApplet","JSON","parse","document","getElementById","dataset","ggbparams","ggbRendererUtils","storeApplet","window","addEventListener","inject","resolve"],"mappings":";;;;;;;;;;gGAmCoB,CAACA,aAAcC,kBACzBC,eAAiB,IAAIC,iBAAQ,0BAC7BC,YAAc,+BAAiCH,SAG/CI,UAAY,IAAIL,aAFPM,KAAKC,MAAMC,SAASC,eAAeL,aAAaM,QAAQC,YAE5B,GAC3CC,iBAAiBC,YAAYZ,SAAUI,WACvCS,OAAOC,iBAAiB,QAAQ,IAAMV,UAAUW,OAAOZ,eAEvDF,eAAee"}